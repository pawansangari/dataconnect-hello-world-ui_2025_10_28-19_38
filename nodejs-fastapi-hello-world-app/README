# Dataconnect Node.js FastAPI App

A full-stack data connectivity application that demonstrates how to build applications using Node.js (React) frontend with FastAPI backend for Databricks Apps. This app showcases connecting to multiple data sources and visualizing data.

## Architecture

```
React Frontend (TypeScript + Vite)
    ↓ API calls
FastAPI Backend (Python)
    ↓ Data source connections & API
Databricks Apps
```

## Features

- **Multiple Data Source Support**: Connect to PostgreSQL, Databricks SQL, MongoDB, Kafka, and more
- **Real-time Data Visualization**: Interactive charts showing data from connected sources
- **Statistics Dashboard**: Overview of connected sources and total records
- **Modern UI**: Beautiful, responsive interface with status indicators
- **API Documentation**: Auto-generated API docs with FastAPI

## Setup

1. **Install Python dependencies:**
```bash
pip install -r requirements.txt
```

2. **Install Node.js dependencies:**
```bash
npm install
```

## Development

1. **Start FastAPI backend:**
```bash
uvicorn backend.main:app --reload --host 0.0.0.0 --port 8000
```

2. **In another terminal, start React dev server:**
```bash
npm run dev
```

- Frontend: http://localhost:5173 (with API proxy)
- Backend API docs: http://localhost:8000/docs

## Production

Build and run:
```bash
npm run build
uvicorn backend.main:app --host 0.0.0.0 --port 8000
```

## Databricks Apps Deployment

Configured for Databricks Apps with `app.yaml`. Deploys to:
`/Workspace/Users/pawanpreet.sangari@databricks.com/databricks_apps/`

Uses `DATABRICKS_APP_PORT` environment variable automatically.

## API Endpoints

- `GET /api/hello` - Welcome message
- `GET /api/health` - Health check with timestamp
- `GET /api/datasources` - List all connected data sources
- `GET /api/datasources/{id}` - Get specific data source details
- `GET /api/datasources/{id}/data` - Get sample data from a data source
- `GET /api/stats` - Get overall statistics
- `GET /docs` - FastAPI interactive documentation

## Data Sources

The app includes mock connections to:
- **Customer Database** (PostgreSQL)
- **Sales Analytics** (Databricks SQL)
- **Product Inventory** (MongoDB)
- **User Events Stream** (Kafka)

Click on any data source card to visualize its data.